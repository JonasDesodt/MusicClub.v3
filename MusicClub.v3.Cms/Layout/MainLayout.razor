@using Microsoft.AspNetCore.Components.Authorization
@using MusicClub.v3.Abstractions

@inherits LayoutComponentBase

@inject ITokenStore TokenStore
@inject AuthenticationStateProvider AuthenticationStateProvider

<div class="@(isMenuOpen ? "menu" : "")">
    <header>
        <div>
            <h1>
                <a href="">
                    <img src="favicon.png" alt="Blazor favicon" />

                    <span>Music Club CMS</span>
                </a>
            </h1>

            <AuthorizeView>
                <Authorized>
                    <button type="button" @onclick="() => isMenuOpen = !isMenuOpen">
                        @(isMenuOpen ? "Close" : "Menu")
                    </button>
                </Authorized>
            </AuthorizeView>
        </div>

        <nav>
            <div>
                <ul>
                    <li>
                        <a href="/act" @onclick="() => isMenuOpen = false">Act</a>
                    </li>
                </ul>

                <ul>
                    <AuthorizeView>
                        <Authorized>
                            <li>
                                <a href="/profile">@context.User.Identity?.Name</a>
                            </li>

                            <li>
                                <button type="button" @onclick="Logout">Logout</button>
                            </li>
                        </Authorized>

                        <NotAuthorized>                           
                            <li>
                                <a href="login" @onclick="() => isMenuOpen = false">Login</a>
                            </li>
                        </NotAuthorized>
                    </AuthorizeView>    
                </ul>
            </div>
        </nav>
    </header>

    <main>
        @Body
    </main>
</div>


@code {
    private bool isMenuOpen = false;

    private async void Logout()
    {
        await TokenStore.RemoveToken();

        await AuthenticationStateProvider.GetAuthenticationStateAsync();

        isMenuOpen = false;
    }
}